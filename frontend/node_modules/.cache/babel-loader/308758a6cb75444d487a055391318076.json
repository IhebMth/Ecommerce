{"ast":null,"code":"import axios from \"axios\";\nimport { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS } from \"../constants/userConstants\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};","map":{"version":3,"sources":["C:/Users/ADMIN/mobileshop/frontend/src/actions/userActions.js"],"names":["axios","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put","USER_UPDATE_PROFILE_FAIL","logout","removeItem"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\nimport { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, \r\n         USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS,\r\n        USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS\r\n        } from \"../constants/userConstants\"\r\n\r\nexport const login = (email, password) => async(dispatch) =>\r\n{\r\ntry{\r\n    dispatch({\r\n        type: USER_LOGIN_REQUEST    \r\n    })\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const { data } = \r\n     await axios.post('/api/users/login',\r\n     {email, password},\r\n      config\r\n      )\r\n\r\n      dispatch({\r\n          type: USER_LOGIN_SUCCESS,\r\n          payload: data\r\n      })\r\n      \r\n      localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n} catch (error)\r\n{\r\n    dispatch(\r\n        {\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                     error.response.data.message \r\n                     : error.message,     \r\n        }\r\n    )\r\n}\r\n}\r\n\r\nexport const register = (name,email, password) => async(dispatch) =>\r\n{\r\ntry{\r\n    dispatch({\r\n        type: USER_REGISTER_REQUEST   \r\n    })\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const { data } = \r\n     await axios.post('/api/users',\r\n     {name, email, password},\r\n      config\r\n      )\r\n\r\n      dispatch({\r\n          type: USER_REGISTER_SUCCESS,\r\n          payload: data\r\n      })\r\n      \r\n      dispatch({\r\n        type: USER_LOGIN_SUCCESS,\r\n        payload: data\r\n    })\r\n\r\n      localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n} catch (error)\r\n{\r\n    dispatch(\r\n        {\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                     error.response.data.message \r\n                     : error.message,     \r\n        }\r\n    )\r\n}\r\n}\r\n\r\nexport const getUserDetails = (id) => async(dispatch, getState) =>\r\n{\r\ntry{\r\n    dispatch({\r\n        type: USER_DETAILS_REQUEST\r\n    })\r\n\r\n    const { userLogin: { userInfo}} = getState()\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n    }\r\n \r\n    const { data } = \r\n     await axios.get(`/api/users/${id}`,\r\n      config\r\n      )\r\n\r\n      dispatch({\r\n          type: USER_DETAILS_SUCCESS,\r\n          payload: data\r\n      })\r\n      \r\n} catch (error)\r\n{\r\n    dispatch(\r\n        {\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                     error.response.data.message \r\n                     : error.message,     \r\n        }\r\n    )\r\n}\r\n}\r\n\r\nexport const updateUserProfile = (user) => async(dispatch, getState) =>\r\n{\r\ntry{\r\n    dispatch({\r\n        type: USER_UPDATE_PROFILE_REQUEST\r\n    })\r\n\r\n    const { userLogin: { userInfo}} = getState()\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n    }\r\n \r\n    const { data } = \r\n     await axios.put(`/api/users/profile`, \r\n     user, \r\n     config\r\n      \r\n      )\r\n\r\n      dispatch({\r\n          type: USER_UPDATE_PROFILE_SUCCESS,\r\n          payload: data\r\n      })\r\n      \r\n} catch (error)\r\n{\r\n    dispatch(\r\n        {\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                     error.response.data.message \r\n                     : error.message,     \r\n        }\r\n    )\r\n}\r\n}\r\n\r\nexport const logout = () => (dispatch) =>\r\n{\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT})\r\n}"]},"metadata":{},"sourceType":"module"}