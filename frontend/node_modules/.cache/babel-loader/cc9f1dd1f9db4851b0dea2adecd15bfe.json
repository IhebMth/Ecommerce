{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\mobileshop\\\\frontend\\\\src\\\\screens\\\\OrderListScreen.js\";\nimport React, { useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listOrders } from '../actions/orderActions';\n\nconst OrderListScreen = () => {\n  const history = useNavigate();\n  const dispatch = useDispatch();\n  const orderList = useSelector(state => state.orderList);\n  const {\n    loading,\n    error,\n    orders\n  } = orderList;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders());\n    } else {\n      history('/login');\n    }\n  }, [dispatch, history, userInfo]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Orders\"), loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 24\n    }\n  }) : error ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }\n  }, error) : /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    responsive: true,\n    className: \"table-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 29\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 29\n    }\n  }, \"USER\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, \"DATE\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, \"PAID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }, \"DELIVERED\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }, \"DELIVERED\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, orders.map(order => /*#__PURE__*/React.createElement(\"tr\", {\n    key: order._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }\n  }, order._id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }\n  }, order.user && order.user.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 33\n    }\n  }, order.createdAt.substring(0, 10)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  }, \"$\", order.totalPrice), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 33\n    }\n  }, order.isPaid ? order.paidAt.substring(0, 10) : /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }, order.isDelivered ? order.deliveredAt.substring(0, 10) : /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(LinkContainer, {\n    to: `/admin/order`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"light\",\n    className: \"btn-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 41\n    }\n  }, \"Details\"))))))));\n};\n\nexport default OrderListScreen;","map":{"version":3,"sources":["C:/Users/ADMIN/mobileshop/frontend/src/screens/OrderListScreen.js"],"names":["React","useEffect","useNavigate","useParams","LinkContainer","Table","Button","useDispatch","useSelector","Message","Loader","listOrders","OrderListScreen","history","dispatch","orderList","state","loading","error","orders","userLogin","userInfo","isAdmin","map","order","_id","user","name","createdAt","substring","totalPrice","isPaid","paidAt","color","isDelivered","deliveredAt"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,SAAQC,aAAR,QAA4B,wBAA5B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA6B,iBAA7B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAUC,UAAV,QAA4B,yBAA5B;;AAIA,MAAMC,eAAe,GAAG,MAAM;AAC1B,QAAMC,OAAO,GAAGX,WAAW,EAA3B;AACA,QAAMY,QAAQ,GAAGP,WAAW,EAA5B;AAIA,QAAMQ,SAAS,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,SAAhB,CAA7B;AACA,QAAM;AAACE,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAA2BJ,SAAjC;AAEA,QAAMK,SAAS,GAAGZ,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACI,SAAhB,CAA7B;AACA,QAAM;AAACC,IAAAA;AAAD,MAAaD,SAAnB;AAIAnB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGoB,QAAQ,IAAIA,QAAQ,CAACC,OAAxB,EACA;AACAR,MAAAA,QAAQ,CAACH,UAAU,EAAX,CAAR;AACH,KAHG,MAGG;AACHE,MAAAA,OAAO,CAAC,QAAD,CAAP;AACH;AACA,GAPQ,EAON,CAACC,QAAD,EAAWD,OAAX,EAAoBQ,QAApB,CAPM,CAAT;AASA,sBACI,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKJ,OAAO,gBAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACNC,KAAK,gBAAG,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BA,KAA3B,CAAH,gBAEH,oBAAC,KAAD;AAAO,IAAA,OAAO,MAAd;AAAe,IAAA,QAAQ,MAAvB;AAAwB,IAAA,KAAK,MAA7B;AAA8B,IAAA,UAAU,MAAxC;AAAyC,IAAA,SAAS,EAAC,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANJ,CADJ,CADJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,MAAM,CAACI,GAAP,CAAWC,KAAK,iBACb;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAK,CAACC,GAAX,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAK,CAACE,IAAN,IAAcF,KAAK,CAACE,IAAN,CAAWC,IAA9B,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACI,SAAN,CAAgBC,SAAhB,CAA0B,CAA1B,EAA6B,EAA7B,CADL,CAHJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACML,KAAK,CAACM,UADZ,CANJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,KAAK,CAACO,MAAN,GACAP,KAAK,CAACQ,MAAN,CAAaH,SAAb,CAAuB,CAAvB,EAA0B,EAA1B,CADA,gBAGD;AAAG,IAAA,SAAS,EAAC,cAAb;AAA4B,IAAA,KAAK,EAAE;AAACI,MAAAA,KAAK,EAAC;AAAP,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CATJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,KAAK,CAACU,WAAN,GACAV,KAAK,CAACW,WAAN,CAAkBN,SAAlB,CAA4B,CAA5B,EAA+B,EAA/B,CADA,gBAGD;AAAG,IAAA,SAAS,EAAC,cAAb;AAA4B,IAAA,KAAK,EAAE;AAACI,MAAAA,KAAK,EAAC;AAAP,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAhBJ,eAuBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAe,IAAA,EAAE,EAAG,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,OAAhB;AAAwB,IAAA,SAAS,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ,CAvBJ,CADH,CADL,CAXJ,CALR,CADJ;AA0DH,CAjFD;;AAmFA,eAAerB,eAAf","sourcesContent":["import React, {useEffect} from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport { Table, Button} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport  { listOrders } from '../actions/orderActions'\r\n\r\n\r\n\r\nconst OrderListScreen = () => {\r\n    const history = useNavigate()\r\n    const dispatch = useDispatch()\r\n    \r\n  \r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const {loading, error, orders} = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin)\r\n        {\r\n        dispatch(listOrders())\r\n    } else {\r\n        history('/login')\r\n    }\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return ( \r\n        <>\r\n            <h1>Orders</h1>\r\n            {loading ? <Loader /> \r\n            : error ? <Message variant='danger'>{error}</Message>\r\n            : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER</th>\r\n                            <th>DATE</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th>DELIVERED</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td> \r\n                                <td>{order.user && order.user.name}</td> \r\n                                <td>\r\n                                    {order.createdAt.substring(0, 10)}\r\n                                </td> \r\n                                <td>\r\n                                    ${order.totalPrice}\r\n                                </td>\r\n                                <td>\r\n                                    {order.isPaid ? (\r\n                                     order.paidAt.substring(0, 10)\r\n                                    ): (\r\n                                    <i className='fas fa-times' style={{color:'red'} }></i>\r\n                                  )}\r\n                                </td> \r\n                                <td>\r\n                                    {order.isDelivered ? (\r\n                                     order.deliveredAt.substring(0, 10)\r\n                                    ): (\r\n                                    <i className='fas fa-times' style={{color:'red'} }></i>\r\n                                  )}\r\n                                </td>             \r\n                                <td>\r\n                                    <LinkContainer to={`/admin/order`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            Details\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    \r\n                                </td>   \r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )    \r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen"]},"metadata":{},"sourceType":"module"}