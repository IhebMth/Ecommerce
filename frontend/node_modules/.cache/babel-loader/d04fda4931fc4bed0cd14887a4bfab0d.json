{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\mobileshop\\\\frontend\\\\src\\\\screens\\\\ProductEditSreen.js\";\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport { Form, Button, Row } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listProductsDetails, updateProduct } from '../actions/productActions';\nimport FormContainer from '../components/FormContainer';\nimport { PRODUCT_UPDATE_REQUEST } from '../constants/productConstants';\nimport bsCustomFileInput from 'bs-custom-file-input';\n\nconst ProductEditScreen = () => {\n  const history = useNavigate();\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const num = useParams();\n  const productId = num.id;\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate;\n  useEffect(() => {\n    bsCustomFileInput.init();\n\n    if (successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_REQUEST\n      });\n      history('/admin/productlist');\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductsDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate]);\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('image', file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      const {\n        data\n      } = await axios.post('/api/upload', formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProduct({\n      _id: productId,\n      name,\n      price,\n      image,\n      brand,\n      category,\n      description,\n      countInStock\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n    to: \"/admin/productlist\",\n    className: \"btn btn-light my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"Go Back\"), /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"Edit Product\"), loadingUpdate && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 35\n    }\n  }), errorUpdate && /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 33\n    }\n  }, errorUpdate), loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 28\n    }\n  }) : error ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 49\n    }\n  }, error) : /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 33\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"name\",\n    placeholder: \"enter your name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 33\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    placeholder: \"enter price\",\n    value: price,\n    onChange: e => setPrice(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"image\",\n    as: Row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 33\n    }\n  }, \"Image\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: image,\n    placeholder: \"Enter image Url\",\n    onChange: e => setImage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Form.File, {\n    type: \"file\",\n    label: \"Choose File\",\n    custom: true,\n    onChange: uploadFileHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 33\n    }\n  }), uploading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 47\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"brand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 33\n    }\n  }, \"Brand\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: brand,\n    placeholder: \"enter Brand\",\n    onChange: e => setBrand(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"countInStock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 33\n    }\n  }, \"Count in Stock\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    placeholder: \"enter count in stock\",\n    value: countInStock,\n    onChange: e => setCountInStock(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 33\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: category,\n    placeholder: \"enter category\",\n    onChange: e => setCategory(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 33\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: description,\n    placeholder: \"enter description\",\n    onChange: e => setDescription(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 29\n    }\n  }, \"Update\"))));\n};\n\nexport default ProductEditScreen;","map":{"version":3,"sources":["C:/Users/ADMIN/mobileshop/frontend/src/screens/ProductEditSreen.js"],"names":["axios","React","useState","useEffect","Link","useParams","useNavigate","Form","Button","Row","useDispatch","useSelector","Message","Loader","listProductsDetails","updateProduct","FormContainer","PRODUCT_UPDATE_REQUEST","bsCustomFileInput","ProductEditScreen","history","dispatch","name","setName","price","setPrice","image","setImage","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","uploading","setUploading","num","productId","id","productDetails","state","loading","error","product","productUpdate","loadingUpdate","errorUpdate","success","successUpdate","init","type","_id","uploadFileHandler","e","file","target","files","formData","FormData","append","config","headers","data","post","console","submitHandler","preventDefault","value"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link, useParams, useNavigate } from 'react-router-dom'\r\nimport { Form, Button, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listProductsDetails, updateProduct } from '../actions/productActions'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { PRODUCT_UPDATE_REQUEST } from '../constants/productConstants'\r\nimport bsCustomFileInput from 'bs-custom-file-input'\r\n\r\nconst ProductEditScreen = () => {\r\n\r\n\r\n\r\n    const history = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n\r\n\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false) \r\n\r\n\r\n    const num = useParams()\r\n    const productId = num.id\r\n\r\n    const productDetails = useSelector((state) => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const productUpdate = useSelector((state) => state.productUpdate) \r\n    const { loading:loadingUpdate, error:errorUpdate, success: successUpdate } = productUpdate\r\n  \r\n\r\n\r\n \r\n\r\n    useEffect(() => {\r\n        bsCustomFileInput.init()\r\n        if(successUpdate) {\r\n            dispatch({type: PRODUCT_UPDATE_REQUEST})\r\n            history('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== productId) {\r\n                dispatch(listProductsDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n        \r\n\r\n    }, [dispatch, history, productId, product, successUpdate])\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n        try{\r\n            const config = {\r\n            headers : { \r\n                'Content-Type': 'multipart/form-data'\r\n            },\r\n        } \r\n        const { data } = await axios.post('/api/upload', formData, config)\r\n        setImage(data)\r\n        setUploading(false)    \r\n    }catch (error) {\r\n        console.error(error)\r\n        setUploading(false)\r\n\r\n        }\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            description,\r\n            countInStock\r\n        }))\r\n\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n            <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n                {loading ? <Loader /> : error ? <Message variant=\"danger\" >{error}</Message> :\r\n                    (\r\n\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"name\"\r\n                                    placeholder=\"enter your name\"\r\n                                    value={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label>Price</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"number\"\r\n                                    placeholder=\"enter price\"\r\n                                    value={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image' as={Row}>\r\n                                <Form.Label>Image</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    value={image}\r\n                                    placeholder=\"Enter image Url\"\r\n                                    onChange={(e) => setImage(e.target.value)}\r\n\r\n                                ></Form.Control>\r\n                                <Form.File\r\n                                type='file'\r\n                                 \r\n                                 label='Choose File' \r\n                                 custom \r\n                                 onChange={uploadFileHandler}/>\r\n\r\n                                 \r\n                                {uploading && <Loader />}\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label>Brand</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    value={brand}\r\n                                    placeholder=\"enter Brand\"\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countInStock'>\r\n                                <Form.Label>Count in Stock</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"number\"\r\n                                    placeholder=\"enter count in stock\"\r\n                                    value={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    value={category}\r\n                                    placeholder=\"enter category\"\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n                                    type='text'\r\n                                    value={description}\r\n                                    placeholder=\"enter description\"\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Button type=\"submit\" variant='primary'  >\r\n                                Update\r\n                            </Button>\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer>\r\n        </>\r\n\r\n    )\r\n}\r\nexport default ProductEditScreen"]},"metadata":{},"sourceType":"module"}