{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productDetailsReducer, productListReduce, productDeleteReducer, productCreateReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from './reducers/orderReducer';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  productDelete: productDeleteReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst ShippingAdressFromStorage = localStorage.getItem('shippingAdress') ? JSON.parse(localStorage.getItem('shippingAdress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAdress: ShippingAdressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleWare = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleWare)));\nexport default store;","map":{"version":3,"sources":["C:/Users/ADMIN/mobileshop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productDetailsReducer","productListReduce","productDeleteReducer","productCreateReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","reducer","productList","productListReducer","productDetails","cart","userLogin","userRegister","userDetails","userList","userDelete","userUpdate","userUpdateProfile","orderCreate","orderDetails","orderPay","orderListMy","productDelete","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","ShippingAdressFromStorage","initialState","cartItems","shippingAdress","userInfo","middleWare","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACIC,qBADJ,EAEIC,iBAFJ,EAGIC,oBAHJ,EAIIC,oBAJJ,QAKO,4BALP;AAMA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACIC,gBADJ,EAEIC,mBAFJ,EAGIC,kBAHJ,EAIIC,wBAJJ,EAKIC,eALJ,EAMIC,iBANJ,EAOIC,iBAPJ,QASO,yBATP;AAUA,SACIC,kBADJ,EAEIC,mBAFJ,EAGIC,eAHJ,EAIIC,kBAJJ,QAKO,yBALP;AAQA,MAAMC,OAAO,GAAGpB,eAAe,CAAC;AAC5BqB,EAAAA,WAAW,EAAEC,kBADe;AAE5BC,EAAAA,cAAc,EAAEnB,qBAFY;AAG5BoB,EAAAA,IAAI,EAAEhB,WAHsB;AAI5BiB,EAAAA,SAAS,EAAEhB,gBAJiB;AAK5BiB,EAAAA,YAAY,EAAEhB,mBALc;AAM5BiB,EAAAA,WAAW,EAAEhB,kBANe;AAO5BiB,EAAAA,QAAQ,EAAEf,eAPkB;AAQ5BgB,EAAAA,UAAU,EAAEf,iBARgB;AAS5BgB,EAAAA,UAAU,EAAEf,iBATgB;AAU5BgB,EAAAA,iBAAiB,EAAEnB,wBAVS;AAW5BoB,EAAAA,WAAW,EAAEhB,kBAXe;AAY5BiB,EAAAA,YAAY,EAAEhB,mBAZc;AAa5BiB,EAAAA,QAAQ,EAAEhB,eAbkB;AAc5BiB,EAAAA,WAAW,EAAEhB,kBAde;AAgB5BiB,EAAAA,aAAa,EAAE9B;AAhBa,CAAD,CAA/B;AAmBA,MAAM+B,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACvBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADuB,GACyB,EADtD;AAGA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACtBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADsB,GACyB,IADrD;AAGA,MAAMI,yBAAyB,GAAGL,YAAY,CAACC,OAAb,CAAqB,gBAArB,IAC5BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAX,CAD4B,GACyB,EAD3D;AAGA,MAAMK,YAAY,GAAG;AACjBpB,EAAAA,IAAI,EAAE;AACFqB,IAAAA,SAAS,EAAER,oBADT;AAEFS,IAAAA,cAAc,EAAEH;AAFd,GADW;AAMjBlB,EAAAA,SAAS,EAAE;AACPsB,IAAAA,QAAQ,EAAEL;AADH;AANM,CAArB;AAYA,MAAMM,UAAU,GAAG,CAAC9C,KAAD,CAAnB;AAEA,MAAM+C,KAAK,GAAGlD,WAAW,CACrBqB,OADqB,EAErBwB,YAFqB,EAGrBzC,mBAAmB,CAACF,eAAe,CAAC,GAAG+C,UAAJ,CAAhB,CAHE,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    productDetailsReducer,\r\n    productListReduce,\r\n    productDeleteReducer,\r\n    productCreateReducer\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailsReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n\r\n} from './reducers/userReducers'\r\nimport {\r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer\r\n} from './reducers/orderReducer'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    \r\n    productDelete: productDeleteReducer\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n    ? JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n    ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst ShippingAdressFromStorage = localStorage.getItem('shippingAdress')\r\n    ? JSON.parse(localStorage.getItem('shippingAdress')) : {}\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAdress: ShippingAdressFromStorage\r\n    },\r\n\r\n    userLogin: {\r\n        userInfo: userInfoFromStorage\r\n    }\r\n\r\n}\r\n\r\nconst middleWare = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleWare))\r\n)\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}