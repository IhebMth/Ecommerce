{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\mobileshop\\\\frontend\\\\src\\\\screens\\\\ProfileScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport { listMyOrders } from '../actions/orderActions';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nconst ProfileScreen = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  const orderListMy = useSelector(state => state.orderListMy);\n  const {\n    loading: loadingOrders,\n    error: errorOrders,\n    orders\n  } = orderListMy; //GET DATA TO UPDATE SCREEN\n\n  const history = useNavigate();\n  useEffect(() => {\n    if (!userInfo) {\n      history('/login');\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails('profile'));\n        dispatch(listMyOrders());\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user, success]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      dispatch(updateUserProfile({\n        id: user._id,\n        name,\n        email,\n        password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, \"User update\"), message && /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 16\n    }\n  }, message), error && /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, error, \" \"), success && /*#__PURE__*/React.createElement(Message, {\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Profile updated \"), loading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"name\",\n    placeholder: \"enter your name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Email Adress\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"enter email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Enter password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"confirmPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"Confirm password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Confirm your password\",\n    value: confirmPassword,\n    onChange: e => setConfirmPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, \"Update\"))), /*#__PURE__*/React.createElement(Col, {\n    md: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, \"My orders\"), loadingOrders ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 26\n    }\n  }) : errorOrders ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, errorOrders) : /*#__PURE__*/React.createElement(Table, {\n    stripped: true,\n    bordered: true,\n    hover: true,\n    responsive: true,\n    className: \"table-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }, \"DATE\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, \"TOTAL\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }, \"PAID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }\n  }, \"DELIVERED\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, orders.map(order => /*#__PURE__*/React.createElement(\"tr\", {\n    key: order._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }, order._id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 29\n    }\n  }, order.createdAt.substring(0, 10)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 29\n    }\n  }, order.totalPrice), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 29\n    }\n  }, order.isPaid ? order.paidAt.substring(0, 10) : /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 34\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }, order.isDelivered ? order.deliveredAt.substring(0, 10) : /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 34\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(LinkContainer, {\n    to: `/order/${order._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 34\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 38\n    }\n  }, \"Details\")))))))));\n};\n\nexport default ProfileScreen;","map":{"version":3,"sources":["C:/Users/ADMIN/mobileshop/frontend/src/screens/ProfileScreen.js"],"names":["React","useState","useEffect","useNavigate","Form","Button","Row","Col","Table","useDispatch","useSelector","Message","Loader","getUserDetails","updateUserProfile","listMyOrders","LinkContainer","ProfileScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","userUpdateProfile","success","orderListMy","loadingOrders","errorOrders","orders","history","submitHandler","e","preventDefault","id","_id","target","value","map","order","createdAt","substring","totalPrice","isPaid","paidAt","color","isDelivered","deliveredAt"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport  { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n\r\nconst ProfileScreen = () => {\r\n    const [name,setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null) \r\n \r\n    const dispatch = useDispatch()\r\n    \r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {  userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const {  success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\n    //GET DATA TO UPDATE SCREEN\r\n    const history = useNavigate()\r\n    useEffect(() => {\r\n        \r\n        if(!userInfo)\r\n        {\r\n           history('/login')\r\n        } else {\r\n             if(!user.name)\r\n               {\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n              } else {\r\n                 setName(user.name)\r\n                 setEmail(user.email)\r\n        }\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) =>\r\n    {            \r\n       \r\n        e.preventDefault()\r\n        if(password !== confirmPassword)\r\n        {\r\n            setMessage('Passwords do not match')\r\n        }else {\r\n            dispatch(updateUserProfile({id: user._id, name, email, password}))\r\n        }  \r\n    }\r\n\r\nreturn(\r\n<Row>\r\n    <Col md={3}>\r\n    <h2>User update</h2>  \r\n   {message && <Message variant='danger'>{message}</Message>}\r\n   {error &&  <Message variant='danger'>{error} </Message>}\r\n   {success &&  <Message variant='success'>Profile updated </Message>}\r\n   {loading && <Loader />}\r\n   <Form onSubmit={submitHandler}>\r\n       \r\n   <Form.Group controlId='name'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control \r\n            type=\"name\"\r\n            placeholder=\"enter your name\"\r\n            value={name}\r\n            onChange= {(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n        </Form.Group>\r\n       \r\n        <Form.Group controlId='email'>\r\n            <Form.Label>Email Adress</Form.Label>\r\n            <Form.Control \r\n            type=\"email\"\r\n            placeholder=\"enter email\"\r\n            value={email}\r\n            onChange= {(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}>\r\n        </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n            <Form.Label>Confirm password</Form.Label>\r\n            <Form.Control\r\n            type='password'\r\n            placeholder='Confirm your password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}>\r\n        </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" variant='primary'  >\r\n            Update\r\n        </Button>\r\n   </Form>\r\n\r\n    </Col>\r\n\r\n    <Col md={9}>\r\n        <h2>My orders</h2>\r\n        {loadingOrders ? <Loader /> \r\n        : errorOrders ? <Message variant='danger'>{errorOrders}</Message>\r\n        : (\r\n            <Table stripped bordered hover responsive className='table-sm'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>DATE</th>\r\n                        <th>TOTAL</th>\r\n                        <th>PAID</th>\r\n                        <th>DELIVERED</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {orders.map(order =>(\r\n                        <tr key={order._id}>\r\n                            <td>{order._id}</td>\r\n                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                            <td>{order.totalPrice}</td>\r\n                            <td>\r\n                                {order.isPaid ? order.paidAt.substring(0, 10)\r\n                             : (\r\n                                 <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                             )}</td>\r\n                            <td>\r\n                                {order.isDelivered ? \r\n                                order.deliveredAt.substring(0, 10)\r\n                             : (\r\n                                 <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                             )}</td>\r\n                             <td>\r\n                                 <LinkContainer to={`/order/${order._id}`}>\r\n                                     <Button variant=\"light\">Details</Button>\r\n                                 </LinkContainer>\r\n                             </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </Table> \r\n        )}\r\n    </Col>\r\n</Row>\r\n\r\n)}\r\nexport default ProfileScreen"]},"metadata":{},"sourceType":"module"}