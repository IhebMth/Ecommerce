{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\mobileshop\\\\frontend\\\\src\\\\screens\\\\OrderScreen.js\";\nimport React, { useEffect } from 'react';\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\nimport { Link, useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { getOrderDetails, deliverOrder } from '../actions/orderActions';\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants';\nimport '../Css/orderScreen.css';\n\nconst OrderScreen = () => {\n  const num = useParams();\n  const orderId = num.id;\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    order,\n    loading,\n    error\n  } = orderDetails;\n  const orderPay = useSelector(state => state.orderPay);\n  const {\n    success: successPay\n  } = orderPay;\n  const orderDeliver = useSelector(state => state.orderDeliver);\n  const {\n    loading: loadingDeliver,\n    success: successDeliver\n  } = orderDeliver;\n\n  if (!loading) {\n    //calculate prices \n    order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0);\n    /*const addDecimals = (num) => \r\n    {\r\n         return (Math.round(num * 100) / 100 ).toFixed(2)\r\n    }*/\n  }\n\n  useEffect(() => {\n    if (!userInfo) if (!order || successPay || successDeliver) {\n      dispatch({\n        type: ORDER_PAY_RESET\n      });\n      dispatch({\n        type: ORDER_DELIVER_RESET\n      });\n      dispatch(getOrderDetails(orderId));\n    }\n  }, [dispatch, order, orderId, successDeliver, successPay]);\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order));\n  };\n\n  return loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 22\n    }\n  }) : error ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 43\n    }\n  }, error) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, \"Shipping\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 28\n    }\n  }, \"Name: \"), \" \", order.user.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, \"Email: \"), /*#__PURE__*/React.createElement(\"a\", {\n    href: `mailto:${order.user.email}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, order.user.email)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, \"Adress:\"), order.shippingAdress.adress, \",\", order.shippingAdress.city, \",\", ' ', \",\", order.shippingAdress.postalCode, ' ', \",\", order.shippingAdress.country), order.isDelivered ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, \" Delivered on \", order.deliveredAt) : /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, \"Not delivered\")), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, \"Payment Method\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, \"Method: \"), order.paymentMethod), order.isPaid ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, \"Paid on \", order.paidAt) : /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, \"Not Paid\")), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, \"Order Items\"), order.orderItems.length === 0 ? /*#__PURE__*/React.createElement(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, \" Your order is empty \") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }, order.orderItems.map((item, index) => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: item.image,\n    alt: item.name,\n    fluid: true,\n    rounded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 53\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/product/${item.product}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 53\n    }\n  }), item.name), /*#__PURE__*/React.createElement(Col, {\n    md: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 49\n    }\n  }, item.qty, \" x $\", item.price, \" = $\", item.qty * item.price))))))))), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    vairant: \"flush\",\n    style: {\n      border: \"2px solid #0C3E35\",\n      marginTop: '100px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 29\n    }\n  }, \"Order Summary\")), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 33\n    }\n  }, \"Items\"), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 33\n    }\n  }, \"$\", order.itemsPrice))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 33\n    }\n  }, \"Shipping\"), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 33\n    }\n  }, \"$\", order.shippingPrice))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 33\n    }\n  }, \"Tax\"), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 33\n    }\n  }, \"$\", order.taxPrice))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 33\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 33\n    }\n  }, \"$\", order.totalPrice))), loadingDeliver && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 52\n    }\n  }), userInfo.isAdmin && order.isPaid && !order.isDelivered && /*#__PURE__*/React.createElement(ListGroup.Item, {\n    className: \"delivered-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn btn-block delivered-btn\",\n    style: {\n      margin: '28px',\n      border: '2px solid black',\n      borderRadius: '20px'\n    },\n    onClick: deliverHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 45\n    }\n  }, \"Mark as Delivered\")))))));\n};\n\nexport default OrderScreen;","map":{"version":3,"sources":["C:/Users/ADMIN/mobileshop/frontend/src/screens/OrderScreen.js"],"names":["React","useEffect","Row","Col","ListGroup","Image","Card","Button","Link","useParams","useDispatch","useSelector","Loader","Message","getOrderDetails","deliverOrder","ORDER_PAY_RESET","ORDER_DELIVER_RESET","OrderScreen","num","orderId","id","dispatch","userLogin","state","userInfo","orderDetails","order","loading","error","orderPay","success","successPay","orderDeliver","loadingDeliver","successDeliver","itemsPrice","orderItems","reduce","acc","item","price","qty","type","deliverHandler","user","name","email","shippingAdress","adress","city","postalCode","country","isDelivered","deliveredAt","paymentMethod","isPaid","paidAt","length","map","index","image","product","border","marginTop","shippingPrice","taxPrice","totalPrice","isAdmin","margin","borderRadius"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { Link,  useParams } from 'react-router-dom'\r\nimport { useDispatch, useSelector, } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getOrderDetails,  deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\nimport '../Css/orderScreen.css'\r\n \r\n\r\n\r\nconst OrderScreen = () => {\r\n    const num = useParams()\r\n    const orderId = num.id\r\n\r\n\r\n    const dispatch = useDispatch() \r\n    \r\n\r\n    \r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const orderDetails = useSelector((state) => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const orderPay = useSelector((state) => state.orderPay)\r\n    const {  success: successPay } = orderPay \r\n\r\n    const orderDeliver = useSelector((state) => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    if (!loading) \r\n    {\r\n        //calculate prices \r\n    order.itemsPrice = order.orderItems.reduce(\r\n    (acc, item) => acc + item.price * item.qty, \r\n    0 \r\n)\r\n\r\n/*const addDecimals = (num) => \r\n{\r\n     return (Math.round(num * 100) / 100 ).toFixed(2)\r\n}*/\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo)\r\n        if (!order || successPay || successDeliver){\r\n            dispatch({type: ORDER_PAY_RESET})\r\n            dispatch({type: ORDER_DELIVER_RESET})\r\n        dispatch(getOrderDetails(orderId))\r\n        }\r\n    }, [dispatch, order, orderId, successDeliver, successPay])\r\n\r\nconst deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n}\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}\r\n    </Message> : <>\r\n        <Row>\r\n            <Col md={8}>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h2>Shipping</h2>\r\n                        <p><strong>Name: </strong> {order.user.name}</p>\r\n                        <p>\r\n                        <strong>Email: </strong>\r\n                            <a  href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                        <p>\r\n                            <strong>Adress:</strong>\r\n                            {order.shippingAdress.adress},\r\n                            {order.shippingAdress.city},{' '},\r\n                            {order.shippingAdress.postalCode}{' '},\r\n                            {order.shippingAdress.country}\r\n                        </p>\r\n\r\n                        {order.isDelivered ? (\r\n                        <Message variant='success'> Delivered on {order.deliveredAt}</Message> \r\n                    ):( <Message variant='danger'>Not delivered</Message> \r\n                    )}\r\n\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                        <h2>Payment Method</h2>\r\n                        <p>\r\n                        <strong>Method: </strong>\r\n                        {order.paymentMethod}\r\n                        </p>\r\n                        {order.isPaid ? (\r\n                        <Message variant='success'>Paid on {order.paidAt}</Message> \r\n                    ):( <Message variant='danger'>Not Paid</Message> \r\n                    )}\r\n                    \r\n                        </ListGroup.Item>\r\n                            <Card>\r\n                    <ListGroup.Item>\r\n                        <h2>Order Items</h2>\r\n                        {order.orderItems.length === 0 ?\r\n                            <Message> Your order is empty </Message>\r\n                            : (\r\n                                <div>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n\r\n                                                <Col md={1}>\r\n                                                    <Image\r\n                                                        src={item.image}\r\n                                                        alt={item.name}\r\n                                                        fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`} />\r\n                                                    {item.name}\r\n                                                </Col>\r\n                                                <Col md={5}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n\r\n                                                </Col>\r\n\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                    </ListGroup.Item>\r\n                    </Card>\r\n                </ListGroup>\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n  \r\n                    <ListGroup vairant='flush'\r\n                    style = {{border: \"2px solid #0C3E35\", marginTop:'100px'}}\r\n                    >\r\n                        \r\n                        <ListGroup.Item \r\n                        \r\n                        >\r\n                            <h2>Order Summary</h2>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Items</Col>\r\n                                <Col>${order.itemsPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Shipping</Col>\r\n                                <Col>${order.shippingPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Tax</Col>\r\n                                <Col>${order.taxPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Total</Col>\r\n                                <Col>${order.totalPrice}</Col>\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>          \r\n                                {loadingDeliver && <Loader />}     \r\n                                {userInfo.isAdmin && order.isPaid &&  !order.isDelivered && (\r\n                                    <ListGroup.Item  className=\"delivered-btn\">\r\n                                        <Button type='button' \r\n                                        className=\"btn btn-block delivered-btn\" \r\n                                        style={{margin: '28px', border: '2px solid black', borderRadius: '20px'}}\r\n                                        onClick={deliverHandler} > \r\n                                            <b>Mark as Delivered</b>\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                \r\n                                )}\r\n                                \r\n                    </ListGroup>\r\n                   \r\n\r\n            </Col>\r\n\r\n        </Row>\r\n    </>\r\n}\r\n\r\nexport default OrderScreen \r\n"]},"metadata":{},"sourceType":"module"}