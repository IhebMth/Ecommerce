{"ast":null,"code":"import axios from \"axios\";\nimport { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT } from \"../constants/userConstants\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};","map":{"version":3,"sources":["C:/Users/ADMIN/mobileshop/frontend/src/actions/userActions.js"],"names":["axios","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","register","name","logout","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,kBAA1B,EAA8CC,kBAA9C,EAAkEC,WAAlE,QAAqF,4BAArF;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAMC,QAAN,IAC1C;AACA,MAAG;AACCA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEP;AADD,KAAD,CAAR;AAIA,UAAMQ,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QACL,MAAMZ,KAAK,CAACa,IAAN,CAAW,kBAAX,EACN;AAACP,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KADM,EAELG,MAFK,CADP;AAMEF,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEN,kBADD;AAELW,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC;AAEL,GAxBD,CAwBE,OAAOO,KAAP,EACF;AACIX,IAAAA,QAAQ,CACJ;AACIC,MAAAA,IAAI,EAAER,eADV;AAEIa,MAAAA,OAAO,EAAEK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACAF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADpB,GAEEF,KAAK,CAACE;AAJrB,KADI,CAAR;AAQH;AACA,CArCM;AAuCP,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAMjB,KAAN,EAAaC,QAAb,KAA0B,MAAMC,QAAN,IAClD;AACA,MAAG;AACCA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEP;AADD,KAAD,CAAR;AAIA,UAAMQ,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QACL,MAAMZ,KAAK,CAACa,IAAN,CAAW,kBAAX,EACN;AAACP,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KADM,EAELG,MAFK,CADP;AAMEF,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEN,kBADD;AAELW,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC;AAEL,GAxBD,CAwBE,OAAOO,KAAP,EACF;AACIX,IAAAA,QAAQ,CACJ;AACIC,MAAAA,IAAI,EAAER,eADV;AAEIa,MAAAA,OAAO,EAAEK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OAAtC,GACAF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,OADpB,GAEEF,KAAK,CAACE;AAJrB,KADI,CAAR;AAQH;AACA,CArCM;AAuCP,OAAO,MAAMG,MAAM,GAAG,MAAOhB,QAAD,IAC5B;AACIO,EAAAA,YAAY,CAACU,UAAb,CAAwB,UAAxB;AACAjB,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AACH,CAJM","sourcesContent":["import axios from \"axios\"\r\nimport { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT } from \"../constants/userConstants\"\r\n\r\nexport const login = (email, password) => async(dispatch) =>\r\n{\r\ntry{\r\n    dispatch({\r\n        type: USER_LOGIN_REQUEST    \r\n    })\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const { data } = \r\n     await axios.post('/api/users/login',\r\n     {email, password},\r\n      config\r\n      )\r\n\r\n      dispatch({\r\n          type: USER_LOGIN_SUCCESS,\r\n          payload: data\r\n      })\r\n      \r\n      localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n} catch (error)\r\n{\r\n    dispatch(\r\n        {\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                     error.response.data.message \r\n                     : error.message,     \r\n        }\r\n    )\r\n}\r\n}\r\n\r\nexport const register = (name,email, password) => async(dispatch) =>\r\n{\r\ntry{\r\n    dispatch({\r\n        type: USER_LOGIN_REQUEST    \r\n    })\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        }\r\n    }\r\n\r\n    const { data } = \r\n     await axios.post('/api/users/login',\r\n     {email, password},\r\n      config\r\n      )\r\n\r\n      dispatch({\r\n          type: USER_LOGIN_SUCCESS,\r\n          payload: data\r\n      })\r\n      \r\n      localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n} catch (error)\r\n{\r\n    dispatch(\r\n        {\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                     error.response.data.message \r\n                     : error.message,     \r\n        }\r\n    )\r\n}\r\n}\r\n\r\nexport const logout = () => (dispatch) =>\r\n{\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT})\r\n}"]},"metadata":{},"sourceType":"module"}