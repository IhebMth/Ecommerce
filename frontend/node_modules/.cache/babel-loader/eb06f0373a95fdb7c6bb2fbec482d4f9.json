{"ast":null,"code":"import axios from 'axios';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL } from '../constants/orderConstants';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/ADMIN/mobileshop/frontend/src/actions/orderActions.js"],"names":["axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_REQUEST","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","listMyOrders"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,oBADJ,EAEIC,oBAFJ,EAGIC,iBAHJ,EAIIC,qBAJJ,EAKIC,qBALJ,EAMIC,kBANJ,EAOIC,iBAPJ,EAQIC,iBARJ,EASIC,cATJ,QAUO,6BAVP;AAYA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAMC,QAAN,EAAgBC,QAAhB,KACtC;AACA,MAAG;AACCD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEb;AADD,KAAD,CAAR;AAIA,UAAM;AAAEc,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AAAb,QAA4BH,QAAQ,EAA1C;AAEA,UAAMI,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFnC;AADE,KAAf;AAOA,UAAM;AAAEC,MAAAA;AAAF,QACL,MAAMrB,KAAK,CAACsB,IAAN,CAAY,aAAZ,EACNX,KADM,EAENM,MAFM,CADP;AAMEL,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEZ,oBADD;AAELqB,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKL,GAzBD,CAyBE,OAAOG,KAAP,EACF;AACIZ,IAAAA,QAAQ,CACJ;AACIE,MAAAA,IAAI,EAAEX,iBADV;AAEIoB,MAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACAF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADpB,GAEEF,KAAK,CAACE;AAJrB,KADI,CAAR;AAQH;AACA,CAtCM;AAwCP,OAAO,MAAMC,eAAe,GAAIC,EAAD,IAAQ,OAAMhB,QAAN,EAAgBC,QAAhB,KACvC;AACA,MAAG;AACCD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAET;AADD,KAAD,CAAR;AAIA,UAAM;AAAEU,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AAAb,QAA4BH,QAAQ,EAA1C;AAEA,UAAMI,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AADnC;AADE,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QACL,MAAMrB,KAAK,CAAC6B,GAAN,CAAW,eAAcD,EAAG,EAA5B,EACNX,MADM,CADP;AAKEL,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEV,qBADD;AAELmB,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKL,GAvBD,CAuBE,OAAOG,KAAP,EACF;AACIZ,IAAAA,QAAQ,CACJ;AACIE,MAAAA,IAAI,EAAER,kBADV;AAEIiB,MAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACAF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADpB,GAEEF,KAAK,CAACE;AAJrB,KADI,CAAR;AAQH;AACA,CApCM;AAsCP,OAAO,MAAMI,QAAQ,GAAG,CAACC,OAAD,EAAUC,aAAV,KAA4B,OAAMpB,QAAN,EAAgBC,QAAhB,KACpD;AACA,MAAG;AACCD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEP;AADD,KAAD,CAAR;AAIA,UAAM;AAAEQ,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AAAb,QAA4BH,QAAQ,EAA1C;AAEA,UAAMI,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFnC;AADE,KAAf;AAOA,UAAM;AAAEC,MAAAA;AAAF,QACL,MAAMrB,KAAK,CAACiC,GAAN,CAAW,eAAcF,OAAQ,MAAjC,EACNC,aADM,EAENf,MAFM,CADP;AAMEL,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEN,iBADD;AAELe,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKL,GAzBD,CAyBE,OAAOG,KAAP,EACF;AACIZ,IAAAA,QAAQ,CACJ;AACIE,MAAAA,IAAI,EAAEL,cADV;AAEIc,MAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACAF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADpB,GAEEF,KAAK,CAACE;AAJrB,KADI,CAAR;AAQH;AACA,CAtCM;AAwCP,OAAO,MAAMQ,YAAY,GAAG,MAAM,OAAMtB,QAAN,EAAgBC,QAAhB,KAClC;AACA,MAAG;AACCD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEP;AADD,KAAD,CAAR;AAIA,UAAM;AAAEQ,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AAAb,QAA4BH,QAAQ,EAA1C;AAEA,UAAMI,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAELC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFnC;AADE,KAAf;AAOA,UAAM;AAAEC,MAAAA;AAAF,QACL,MAAMrB,KAAK,CAACiC,GAAN,CAAW,eAAcF,OAAQ,MAAjC,EACNC,aADM,EAENf,MAFM,CADP;AAMEL,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEN,iBADD;AAELe,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKL,GAzBD,CAyBE,OAAOG,KAAP,EACF;AACIZ,IAAAA,QAAQ,CACJ;AACIE,MAAAA,IAAI,EAAEL,cADV;AAEIc,MAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACAF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADpB,GAEEF,KAAK,CAACE;AAJrB,KADI,CAAR;AAQH;AACA,CAtCM","sourcesContent":["import axios from 'axios'\r\nimport  {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL\r\n} from '../constants/orderConstants'\r\n\r\nexport const createOrder = (order) => async(dispatch, getState) =>\r\n{\r\ntry{\r\n    dispatch({\r\n        type: ORDER_CREATE_REQUEST\r\n    })\r\n\r\n    const { userLogin: { userInfo}} = getState()\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n    }\r\n \r\n    const { data } = \r\n     await axios.post(`/api/orders`, \r\n     order, \r\n     config\r\n       )\r\n\r\n      dispatch({\r\n          type: ORDER_CREATE_SUCCESS,\r\n          payload: data\r\n      })\r\n      \r\n} catch (error)\r\n{\r\n    dispatch(\r\n        {\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                     error.response.data.message \r\n                     : error.message,     \r\n        }\r\n    )\r\n}\r\n}\r\n\r\nexport const getOrderDetails = (id) => async(dispatch, getState) =>\r\n{\r\ntry{\r\n    dispatch({\r\n        type: ORDER_DETAILS_REQUEST\r\n    })\r\n\r\n    const { userLogin: { userInfo}} = getState()\r\n\r\n    const config = {\r\n        headers: {\r\n            Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n    }\r\n \r\n    const { data } = \r\n     await axios.get(`/api/orders/${id}`,\r\n     config\r\n       )\r\n\r\n      dispatch({\r\n          type: ORDER_DETAILS_SUCCESS,\r\n          payload: data\r\n      })\r\n      \r\n} catch (error)\r\n{\r\n    dispatch(\r\n        {\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                     error.response.data.message \r\n                     : error.message,     \r\n        }\r\n    )\r\n}\r\n}\r\n\r\nexport const payOrder = (orderId, paymentResult) => async(dispatch, getState) =>\r\n{\r\ntry{\r\n    dispatch({\r\n        type: ORDER_PAY_REQUEST\r\n    })\r\n\r\n    const { userLogin: { userInfo}} = getState()\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n    }\r\n \r\n    const { data } = \r\n     await axios.put(`/api/orders/${orderId}/pay`,\r\n     paymentResult,\r\n     config\r\n       )\r\n\r\n      dispatch({\r\n          type: ORDER_PAY_SUCCESS,\r\n          payload: data\r\n      })\r\n      \r\n} catch (error)\r\n{\r\n    dispatch(\r\n        {\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                     error.response.data.message \r\n                     : error.message,     \r\n        }\r\n    )\r\n}\r\n}\r\n\r\nexport const listMyOrders = () => async(dispatch, getState) =>\r\n{\r\ntry{\r\n    dispatch({\r\n        type: ORDER_PAY_REQUEST\r\n    })\r\n\r\n    const { userLogin: { userInfo}} = getState()\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            Authorization: `Bearer ${userInfo.token}`\r\n        }\r\n    }\r\n \r\n    const { data } = \r\n     await axios.put(`/api/orders/${orderId}/pay`,\r\n     paymentResult,\r\n     config\r\n       )\r\n\r\n      dispatch({\r\n          type: ORDER_PAY_SUCCESS,\r\n          payload: data\r\n      })\r\n      \r\n} catch (error)\r\n{\r\n    dispatch(\r\n        {\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message ?\r\n                     error.response.data.message \r\n                     : error.message,     \r\n        }\r\n    )\r\n}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}