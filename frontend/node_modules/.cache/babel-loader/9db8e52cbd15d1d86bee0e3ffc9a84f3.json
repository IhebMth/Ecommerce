{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productDetailsReducer, productListReduce, produ } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from './reducers/orderReducer';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  productDelete: productDeleteReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst ShippingAdressFromStorage = localStorage.getItem('shippingAdress') ? JSON.parse(localStorage.getItem('shippingAdress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAdress: ShippingAdressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleWare = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleWare)));\nexport default store;","map":{"version":3,"sources":["C:/Users/ADMIN/mobileshop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productDetailsReducer","productListReduce","produ","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","reducer","productList","productListReducer","productDetails","cart","userLogin","userRegister","userDetails","userList","userDelete","userUpdate","userUpdateProfile","orderCreate","orderDetails","orderPay","orderListMy","productDelete","productDeleteReducer","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","ShippingAdressFromStorage","initialState","cartItems","shippingAdress","userInfo","middleWare","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,qBAAT,EACSC,iBADT,EAESC,KAFT,QAGe,4BAHf;AAIA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,gBAAT,EACSC,mBADT,EAESC,kBAFT,EAGSC,wBAHT,EAISC,eAJT,EAKSC,iBALT,EAMSC,iBANT,QAQe,yBARf;AASA,SAASC,kBAAT,EACSC,mBADT,EAESC,eAFT,EAGSC,kBAHT,QAIe,yBAJf;AAOA,MAAMC,OAAO,GAAGnB,eAAe,CAAC;AAC5BoB,EAAAA,WAAW,EAAEC,kBADe;AAE5BC,EAAAA,cAAc,EAAElB,qBAFY;AAG5BmB,EAAAA,IAAI,EAAEhB,WAHsB;AAI5BiB,EAAAA,SAAS,EAAEhB,gBAJiB;AAK5BiB,EAAAA,YAAY,EAAEhB,mBALc;AAM5BiB,EAAAA,WAAW,EAAEhB,kBANe;AAO5BiB,EAAAA,QAAQ,EAAEf,eAPkB;AAQ5BgB,EAAAA,UAAU,EAAEf,iBARgB;AAS5BgB,EAAAA,UAAU,EAAEf,iBATgB;AAU5BgB,EAAAA,iBAAiB,EAAEnB,wBAVS;AAW5BoB,EAAAA,WAAW,EAAEhB,kBAXe;AAY5BiB,EAAAA,YAAY,EAAEhB,mBAZc;AAa5BiB,EAAAA,QAAQ,EAAEhB,eAbkB;AAc5BiB,EAAAA,WAAW,EAAEhB,kBAde;AAe5BiB,EAAAA,aAAa,EAAEC;AAfa,CAAD,CAA/B;AAkBA,MAAMC,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAC3BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAD2B,GACqB,EADlD;AAGA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD0B,GACqB,IADjD;AAGA,MAAMI,yBAAyB,GAAGL,YAAY,CAACC,OAAb,CAAqB,gBAArB,IAChCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAX,CADgC,GACqB,EADvD;AAGA,MAAMK,YAAY,GAAG;AACjBrB,EAAAA,IAAI,EAAE;AACFsB,IAAAA,SAAS,EAAER,oBADT;AAEFS,IAAAA,cAAc,EAAEH;AAFd,GADW;AAMjBnB,EAAAA,SAAS,EAAE;AACHuB,IAAAA,QAAQ,EAAEL;AADP;AANM,CAArB;AAYA,MAAMM,UAAU,GAAG,CAAC9C,KAAD,CAAnB;AAEA,MAAM+C,KAAK,GAAGlD,WAAW,CACrBoB,OADqB,EAErByB,YAFqB,EAGrBzC,mBAAmB,CAACF,eAAe,CAAC,GAAG+C,UAAJ,CAAhB,CAHE,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productDetailsReducer, \r\n         productListReduce,\r\n         produ\r\n        } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, \r\n         userRegisterReducer, \r\n         userDetailsReducer,\r\n         userUpdateProfileReducer,\r\n         userListReducer,\r\n         userDeleteReducer,\r\n         userUpdateReducer,\r\n         \r\n        } from './reducers/userReducers'\r\nimport { orderCreateReducer,\r\n         orderDetailsReducer,\r\n         orderPayReducer,\r\n         orderListMyReducer\r\n        } from './reducers/orderReducer'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    productDelete: productDeleteReducer\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n? JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst ShippingAdressFromStorage = localStorage.getItem('shippingAdress')\r\n? JSON.parse(localStorage.getItem('shippingAdress')) : {}\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage, \r\n        shippingAdress: ShippingAdressFromStorage\r\n    },\r\n    \r\n    userLogin: {\r\n            userInfo: userInfoFromStorage\r\n        }\r\n\r\n}\r\n\r\nconst middleWare = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer, \r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleWare))\r\n)\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}