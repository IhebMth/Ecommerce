{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productDetailsReducer, productListReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer } from './reducers/orderReducer';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst ShippingAdressFromStorage = localStorage.getItem('shippingAdress') ? JSON.parse(localStorage.getItem('shippingAdress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAdress: ShippingAdressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleWare = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleWare)));\nexport default store;","map":{"version":3,"sources":["C:/Users/ADMIN/mobileshop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productDetailsReducer","productListReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","orderPay","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","ShippingAdressFromStorage","initialState","cartItems","shippingAdress","userInfo","middleWare","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,qBAAT,EAAgCC,kBAAhC,QAA0D,4BAA1D;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,gBAAT,EACSC,mBADT,EAESC,kBAFT,EAGSC,wBAHT,QAIe,yBAJf;AAKA,SAASC,kBAAT,EACSC,mBADT,EAC8BC,eAD9B,QACqD,yBADrD;AAGA,MAAMC,OAAO,GAAGd,eAAe,CAAC;AAC5Be,EAAAA,WAAW,EAAEV,kBADe;AAE5BW,EAAAA,cAAc,EAAEZ,qBAFY;AAG5Ba,EAAAA,IAAI,EAAEX,WAHsB;AAI5BY,EAAAA,SAAS,EAAEX,gBAJiB;AAK5BY,EAAAA,YAAY,EAAEX,mBALc;AAM5BY,EAAAA,WAAW,EAAEX,kBANe;AAO5BY,EAAAA,iBAAiB,EAAEX,wBAPS;AAQ5BY,EAAAA,WAAW,EAAEX,kBARe;AAS5BY,EAAAA,YAAY,EAAEX,mBATc;AAU5BY,EAAAA,QAAQ,EAAEX;AAVkB,CAAD,CAA/B;AAaA,MAAMY,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAC3BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAD2B,GACqB,EADlD;AAGA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAC1BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAD0B,GACqB,IADjD;AAGA,MAAMI,yBAAyB,GAAGL,YAAY,CAACC,OAAb,CAAqB,gBAArB,IAChCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAX,CADgC,GACqB,EADvD;AAGA,MAAMK,YAAY,GAAG;AACjBf,EAAAA,IAAI,EAAE;AACFgB,IAAAA,SAAS,EAAER,oBADT;AAEFS,IAAAA,cAAc,EAAEH;AAFd,GADW;AAMjBb,EAAAA,SAAS,EAAE;AACHiB,IAAAA,QAAQ,EAAEL;AADP;AANM,CAArB;AAYA,MAAMM,UAAU,GAAG,CAAClC,KAAD,CAAnB;AAEA,MAAMmC,KAAK,GAAGtC,WAAW,CACrBe,OADqB,EAErBkB,YAFqB,EAGrB7B,mBAAmB,CAACF,eAAe,CAAC,GAAGmC,UAAJ,CAAhB,CAHE,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productDetailsReducer, productListReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, \r\n         userRegisterReducer, \r\n         userDetailsReducer,\r\n         userUpdateProfileReducer\r\n        } from './reducers/userReducers'\r\nimport { orderCreateReducer,\r\n         orderDetailsReducer, orderPayReducer } from './reducers/orderReducer'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n? JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst ShippingAdressFromStorage = localStorage.getItem('shippingAdress')\r\n? JSON.parse(localStorage.getItem('shippingAdress')) : {}\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage, \r\n        shippingAdress: ShippingAdressFromStorage\r\n    },\r\n    \r\n    userLogin: {\r\n            userInfo: userInfoFromStorage\r\n        }\r\n\r\n}\r\n\r\nconst middleWare = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer, \r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleWare))\r\n)\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}