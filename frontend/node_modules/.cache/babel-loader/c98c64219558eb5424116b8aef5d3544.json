{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADRESS } from \"../constants/cartConstants\";\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    cartItems: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};\nexport const cartShipping = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    cartItems: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/ADMIN/mobileshop/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADRESS","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","map","filter","cartShipping"],"mappings":"AAAA,SAASA,aAAT,EACQC,gBADR,EAEQC,yBAFR,QAGW,4BAHX;AAKA,OAAO,MAAMC,WAAW,GAAG,YAC3B;AAAA,MAD4BC,KAC5B,uEADoC;AAAEC,IAAAA,SAAS,EAAE;AAAb,GACpC;AAAA,MADuDC,MACvD;;AACI,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKP,aAAL;AACI,YAAMQ,IAAI,GAAGF,MAAM,CAACG,OAApB;AAEA,YAAMC,SAAS,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA/C,CAAlB;;AAEA,UAAIH,SAAJ,EAAe;AACZ,eAAO,EACH,GAAGN,KADA;AAEHC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAoBF,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CAAlE;AAFR,SAAP;AAIF,OALD,MAMA;AACI,eAAO,EACL,GAAGR,KADE;AAELC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAFN,SAAP;AAIH;;AAED,SAAKP,gBAAL;AACA,aAAO,EACH,GAAGG,KADA;AAEHC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,MAAhB,CAAwBH,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcP,MAAM,CAACG,OAAnD;AAFR,OAAP;;AAMA;AACA,aAAOL,KAAP;AA5BR;AA8BH,CAhCM;AAkCP,OAAO,MAAMY,YAAY,GAAG,YAC5B;AAAA,MAD6BZ,KAC7B,uEADqC;AAAEC,IAAAA,SAAS,EAAE;AAAb,GACrC;AAAA,MADwDC,MACxD;;AACI,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKP,aAAL;AACI,YAAMQ,IAAI,GAAGF,MAAM,CAACG,OAApB;AAEA,YAAMC,SAAS,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA/C,CAAlB;;AAEA,UAAIH,SAAJ,EAAe;AACZ,eAAO,EACH,GAAGN,KADA;AAEHC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAoBF,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CAAlE;AAFR,SAAP;AAIF,OALD,MAMA;AACI,eAAO,EACL,GAAGR,KADE;AAELC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAFN,SAAP;AAIH;;AAED,SAAKP,gBAAL;AACA,aAAO,EACH,GAAGG,KADA;AAEHC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,MAAhB,CAAwBH,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcP,MAAM,CAACG,OAAnD;AAFR,OAAP;;AAMA;AACA,aAAOL,KAAP;AA5BR;AA8BH,CAhCM","sourcesContent":["import { CART_ADD_ITEM, \r\n        CART_REMOVE_ITEM,\r\n        CART_SAVE_SHIPPING_ADRESS    \r\n    } from \"../constants/cartConstants\";\r\n\r\nexport const cartReducer = (state = { cartItems: [] }, action) => \r\n{\r\n    switch(action.type)\r\n    {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find((x) => x.product === item.product)\r\n\r\n            if (existItem) {\r\n               return {\r\n                   ...state, \r\n                   cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n               } \r\n            }else \r\n            {\r\n                return {\r\n                  ...state,\r\n                  cartItems: [...state.cartItems, item]\r\n              }  \r\n            }\r\n            \r\n            case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n            } \r\n   \r\n\r\n            default: \r\n            return state\r\n        }\r\n}\r\n\r\nexport const cartShipping = (state = { cartItems: [] }, action) => \r\n{\r\n    switch(action.type)\r\n    {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find((x) => x.product === item.product)\r\n\r\n            if (existItem) {\r\n               return {\r\n                   ...state, \r\n                   cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\r\n               } \r\n            }else \r\n            {\r\n                return {\r\n                  ...state,\r\n                  cartItems: [...state.cartItems, item]\r\n              }  \r\n            }\r\n            \r\n            case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n            } \r\n   \r\n\r\n            default: \r\n            return state\r\n        }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}