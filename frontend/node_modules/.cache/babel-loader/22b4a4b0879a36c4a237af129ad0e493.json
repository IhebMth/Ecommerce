{"ast":null,"code":"import axios from \"axios\";\nimport { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_DETAILS_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_RESET } from \"../constants/userConstants\";\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users`, config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DELETE_SUCCESS\n    });\n    dipsatch;\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUser = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/${user._id}`, user, config);\n    dispatch({\n      type: USER_UPDATE_SUCCESS\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_DETAILS_RESET\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: ORDER_LIST_MY_RESET\n  });\n  dispatch({\n    type: USER_LIST_RESET\n  });\n};","map":{"version":3,"sources":["C:/Users/ADMIN/mobileshop/frontend/src/actions/userActions.js"],"names":["axios","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_DETAILS_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_DELETE_REQUEST","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_LIST_MY_RESET","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put","listUsers","deleteUser","delete","dipsatch","updateUser","_id","logout","removeItem"],"mappings":"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","sourcesContent":["import axios from \"axios\"\r\nimport {\r\n    USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT,\r\n    USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS,\r\n    USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_DETAILS_RESET,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_DELETE_REQUEST,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET\r\n} from \"../constants/userConstants\"\r\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\"\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } =\r\n            await axios.post('/api/users/login',\r\n                { email, password },\r\n                config\r\n            )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch(\r\n            {\r\n                type: USER_LOGIN_FAIL,\r\n                payload: error.response && error.response.data.message ?\r\n                    error.response.data.message\r\n                    : error.message,\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } =\r\n            await axios.post('/api/users',\r\n                { name, email, password },\r\n                config\r\n            )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch(\r\n            {\r\n                type: USER_REGISTER_FAIL,\r\n                payload: error.response && error.response.data.message ?\r\n                    error.response.data.message\r\n                    : error.message,\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } =\r\n            await axios.get(`/api/users/${id}`,\r\n                config\r\n            )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch(\r\n            {\r\n                type: USER_DETAILS_FAIL,\r\n                payload: error.response && error.response.data.message ?\r\n                    error.response.data.message\r\n                    : error.message,\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } =\r\n            await axios.put(`/api/users/profile`,\r\n                user,\r\n                config\r\n\r\n            )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch(\r\n            {\r\n                type: USER_UPDATE_PROFILE_FAIL,\r\n                payload: error.response && error.response.data.message ?\r\n                    error.response.data.message\r\n                    : error.message,\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } =\r\n            await axios.get(`/api/users`,\r\n                config)\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch(\r\n            {\r\n                type: USER_LIST_FAIL,\r\n                payload: error.response && error.response.data.message ?\r\n                    error.response.data.message\r\n                    : error.message,\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        await axios.delete(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS\r\n        })\r\n\r\n        dipsatch\r\n\r\n\r\n\r\n    } catch (error) {\r\n        dispatch(\r\n            {\r\n                type: USER_DELETE_FAIL,\r\n                payload: error.response && error.response.data.message ?\r\n                    error.response.data.message\r\n                    : error.message,\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.put(`/api/users/${user._id}`,\r\n            user,\r\n            config)\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n        })\r\n\r\n        dispatch ({ type: USER_DETAILS_SUCCESS,  payload:data })\r\n        dispatch ({ type: USER_DETAILS_RESET })\r\n\r\n    } catch (error) {\r\n        dispatch(\r\n            {\r\n                type: USER_UPDATE_FAIL,\r\n                payload: error.response && error.response.data.message ?\r\n                    error.response.data.message\r\n                    : error.message,\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}"]},"metadata":{},"sourceType":"module"}